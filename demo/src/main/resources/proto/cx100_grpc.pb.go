// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package object_detection

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// GreenObjectServiceClient is the client API for GreenObjectService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type GreenObjectServiceClient interface {
	PublishObjectCoordinates(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ObjectCoordinates, error)
}

type greenObjectServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGreenObjectServiceClient(cc grpc.ClientConnInterface) GreenObjectServiceClient {
	return &greenObjectServiceClient{cc}
}

func (c *greenObjectServiceClient) PublishObjectCoordinates(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*ObjectCoordinates, error) {
	out := new(ObjectCoordinates)
	err := c.cc.Invoke(ctx, "/object_detection.GreenObjectService/PublishObjectCoordinates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreenObjectServiceServer is the server API for GreenObjectService service.
// All implementations must embed UnimplementedGreenObjectServiceServer
// for forward compatibility
type GreenObjectServiceServer interface {
	PublishObjectCoordinates(context.Context, *Empty) (*ObjectCoordinates, error)
	mustEmbedUnimplementedGreenObjectServiceServer()
}

// UnimplementedGreenObjectServiceServer must be embedded to have forward compatible implementations.
type UnimplementedGreenObjectServiceServer struct {
}

func (UnimplementedGreenObjectServiceServer) PublishObjectCoordinates(context.Context, *Empty) (*ObjectCoordinates, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PublishObjectCoordinates not implemented")
}
func (UnimplementedGreenObjectServiceServer) mustEmbedUnimplementedGreenObjectServiceServer() {}

// UnsafeGreenObjectServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to GreenObjectServiceServer will
// result in compilation errors.
type UnsafeGreenObjectServiceServer interface {
	mustEmbedUnimplementedGreenObjectServiceServer()
}

func RegisterGreenObjectServiceServer(s grpc.ServiceRegistrar, srv GreenObjectServiceServer) {
	s.RegisterService(&GreenObjectService_ServiceDesc, srv)
}

func _GreenObjectService_PublishObjectCoordinates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreenObjectServiceServer).PublishObjectCoordinates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/object_detection.GreenObjectService/PublishObjectCoordinates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreenObjectServiceServer).PublishObjectCoordinates(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

// GreenObjectService_ServiceDesc is the grpc.ServiceDesc for GreenObjectService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var GreenObjectService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "object_detection.GreenObjectService",
	HandlerType: (*GreenObjectServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PublishObjectCoordinates",
			Handler:    _GreenObjectService_PublishObjectCoordinates_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cx100.proto",
}
